import "Window"
import "String"
import "KeyCodes"
import "CharCodes"
import "MinnowTest"	; this actually works :) [but ONLY if there are no double imports :\]
import "MinnowTools"
import "Minnow"
classdef iConsole
	Window window
	Window win
	String command
	String fstorstr
	byte sub
	
	func _init (void : null)
		window = sys Console.GetWindow()
		command = sys Program.Ealloc(80)
		fstorstr = sys Program.Ealloc(80)
		sys Console.Print("Console: ")
		sub = 0x0
		MinnowTest._init()
		
	func _loop (void : null)
		if sys Keyboard.HasEvent(window)
			char ch = sys Keyboard.TakeEvent(window)
			
			if ch != KeyCodes.ENTER
				if ch != KeyCodes.KEY_SHIFT
					command.AppendChar(ch)
					sys Console.PrintChar(ch)
				
			if ch == KeyCodes.ENTER
				sys Console.Newline()
				
				if sub == 0x2
					fstorstr
					asm("mov eax, ecx")
					command
					asm("mov ebx, ecx")
					asm("call Minnow.nameAndTypeToPointer")
					asm("mov eax, ecx")
					asm("call Minnow.getBuffer")
					asm("call Minnow.skipHeader")
					asm("mov ebx, ecx")
					asm("call console.println")
					sub = 0x0
				
				if sub == 0x1
					fstorstr.SetChar(0, CharCodes.NUL)
					fstorstr.Append(command)
					sys Console.Print("File type: ")
					sub = 0x2
				
				if command.Equals("help")
					sys Console.PrintLine("clear: Clears the screen.")
					sys Console.PrintLine("exit: Exits the console.")
					sys Console.PrintLine("fullscreen: Toggles fullscreen mode.")
					sys Console.PrintLine("help: Displays this prompt.")
					sys Console.PrintLine("lock: Locks the computer.")
					sys Console.PrintLine("memstat: Prints out the percentage of RAM in use.")
					sys Console.PrintLine("restart: Restarts the computer.")
					sys Console.PrintLine("time: Prints out the current time.")
					sys Console.PrintLine("tree: Displays all mounted files.")
					sys Console.PrintLine("partition: Detects and displays partition info.")
					sys Console.PrintLine("readfile: Prints out the contents of a text file.")
					sys Console.PrintLine("FSDEMO: Runs a filesystem demo.")
					
				if command.Equals("clear")
					sys Console.Clear()
					
				if command.Equals("exit")
					sys Dolphin.UnregisterWindow(window)
					
				if command.Equals("fullscreen")
					window.xPos = 0
					window.yPos = 8
					window.width = sys System.GetValue(SCREEN_BYTEWIDTH)
					window.height = sys System.GetValue(SCREEN_HEIGHT)
				
				if command.Equals("lock")
					asm("call Manager.lock")
				
				if command.Equals("memstat")
					sys Console.Print("Usage: ")
					sys Console.PrintHex(sys System.GetValue(RAM_USED))
					sys Console.Print(" / ")
					sys Console.PrintHex(sys System.GetValue(RAM_TOTAL))
					sys Console.Newline()
					
				if command.Equals("test")
					asm("call console.test")
					
				if command.Equals("time")
					sys Console.SetVGAcolor(0x0B)
					sys Console.PrintHex(sys Time.GetHour())
					sys Console.Print(":")
					sys Console.PrintHex(sys Time.GetMinute())
					sys Console.Print(":")
					sys Console.PrintHex(sys Time.GetSecond())
					sys Console.Print(" ")
					sys Console.PrintHex(sys Time.GetMonth())
					sys Console.Print("-")
					sys Console.PrintHex(sys Time.GetDay())
					sys Console.Print("-")
					sys Console.PrintHex(sys Time.GetYear())
					sys Console.Newline()
					
				if command.Equals("tree")
					asm("call Minnow.ctree")
					
				if command.Equals("restart")
					asm("mov eax, SysHaltScreen.RESET")
					"Restarting the computer."
					asm("mov ebx, ecx")
					asm("mov ecx, 5")
					asm("call SysHaltScreen.show")
				
				if command.Equals("partition")
					asm("call AHCI.printPartitionInfo")
					
				if command.Equals("readfile")
					sys Console.Print("File name: ")
					sub = 0x1
				
				if command.Equals("FSDEMO")
					MinnowTest.RunTest()
				
				if command.Equals("VERIFY")
					MinnowTools.ValidateFS()
				
				if sub == 0x0
					sys Console.Print("Console: ")
				command.SetChar(0, CharCodes.NUL)
				